"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Overview","href":"/hydra-poc/docs/intro","docId":"intro"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installation Instructions","href":"/hydra-poc/docs/getting-started/installation","docId":"getting-started/installation"},{"type":"link","label":"QuickStart","href":"/hydra-poc/docs/getting-started/quickstart","docId":"getting-started/quickstart"},{"type":"category","label":"Demo","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"With Docker","href":"/hydra-poc/docs/getting-started/demo/with-docker","docId":"getting-started/demo/with-docker"},{"type":"link","label":"Without Docker","href":"/hydra-poc/docs/getting-started/demo/without-docker","docId":"getting-started/demo/without-docker"}],"href":"/hydra-poc/docs/getting-started/demo/"}],"href":"/hydra-poc/docs/getting-started/"},{"type":"link","label":"Haskell Packages","href":"/hydra-poc/docs/haskell-packages/","docId":"haskell-packages/index"},{"type":"link","label":"F.A.Q.","href":"/hydra-poc/docs/faq/","docId":"faq/index"}]},"docs":{"faq/index":{"id":"faq/index","title":"Frequently Asked Questions","description":"And their answers!","sidebar":"tutorialSidebar"},"getting-started/demo/index":{"id":"getting-started/demo/index","title":"Demo","description":"This video demonstrates a basic terminal user interface for the sake of example. Behind the scene, the terminal client relies on a WebSocket API provided by the Hydra nodes which is what applications will likely be using. Said differently, this is one example of possible application (and to be frank, not a very interesting one!)","sidebar":"tutorialSidebar"},"getting-started/demo/with-docker":{"id":"getting-started/demo/with-docker","title":"With Docker","description":"Our standard demo setup for demonstrating the Hydra Head protocol.","sidebar":"tutorialSidebar"},"getting-started/demo/without-docker":{"id":"getting-started/demo/without-docker","title":"Without Docker","description":"Running the demo without docker containers, but with plain executables and scripts.","sidebar":"tutorialSidebar"},"getting-started/index":{"id":"getting-started/index","title":"Getting Started","description":"","sidebar":"tutorialSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation Instructions","description":"Installation instructions for Hydra nodes. We recommend using docker and dealing with containers as a quick-start.","sidebar":"tutorialSidebar"},"getting-started/quickstart":{"id":"getting-started/quickstart","title":"QuickStart","description":"Your first steps with a hydra-node.","sidebar":"tutorialSidebar"},"haskell-packages/index":{"id":"haskell-packages/index","title":"Haskell Packages","description":"The Hydra project is divided into several Haskell packages fulfilling different parts of the protocol. While some packages are internal and specific to the Hydra project, some are quite generic and may be useful to other projects facing similar issues. Regardless, we expose Haddock documentation for all of them.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Overview","description":"Hydra is the layer-two scalability solution for Cardano, which aims to increase the speed of transactions (low latency, high throughput) and minimize transaction cost.","sidebar":"tutorialSidebar"}}}')}}]);